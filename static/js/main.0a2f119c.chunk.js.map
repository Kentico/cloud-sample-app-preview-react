{"version":3,"sources":["constants/routePaths.ts","authentication/authOptions.ts","authentication/WebAuth.ts","constants/localStorageKeys.ts","components/Callback.tsx","context/AuthContext.tsx","utils/routeTransitionUtils.ts","enums/LoadingStatus.ts","components/ErrorPage.tsx","models/Article.ts","models/LandingPage.ts","models/Product.ts","repositories/contentItemRepository.ts","context/AppContext.tsx","components/NavigationBar.tsx","components/PageContent.tsx","components/Product/ProductDetailsPage.tsx","components/Product/ProductCard.tsx","components/Product/ProductsPage.tsx","components/WelcomePage.tsx","App.tsx","serviceWorker.js","utils/ajax.ts","utils/restProvider.ts","repositories/previewApiKeyRepository.ts","utils/projectIdUtil.ts","utils/previewApiKeyUtils.ts","context/AppContextInitialization.tsx","index.tsx"],"names":["CallbackRoute","concat","ProjectRoute","ProductsRoute","ProductDetailsRoute","authOptions","domain","process","clientID","audience","redirectUri","responseType","scope","logoutOptions","returnTo","WebAuth","_this","this","Object","classCallCheck","webAuth","auth0","login","authorize","silentLogin","localStorage","setItem","window","location","pathname","prompt","logout","handleAuthentication","onSuccessLogin","onFailedLogin","parseHash","err","authResult","accessToken","idToken","expiresAt","expiresIn","Date","getTime","redirectUriFromStorage","getItem","removeItem","isAuthenticated","Callback","react_default","a","createElement","defaultAuthContext","isLoggedIn","context","React","createContext","AuthContextProvider","Provider","AuthContextConsumer","Consumer","AuthContext","props","possibleConstructorReturn","getPrototypeOf","call","isAuthUrlHash","hash","test","handleAuthCallback","_ref","setState","console","log","history","push","warn","state","_this2","objectSpread","react_router","from","to","path","render","Callback_Callback","value","children","Component","AuthContextWithRouter","withRouter","buildPath","route","params","compile","LoadingStatus","ErrorPageType","ArticleExampleContentType","_ContentItem","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","body","title","url","inherits","ContentItem","LandingPageExampleContentType","propertyResolver","fieldName","productList","ProductExampleContentType","description","name","image","taxonomyCategorizingTargetAudience","deliveryClient","ensureDeliveryClient","projectId","previewApiKey","DeliveryClient","enablePreviewMode","enableAdvancedLogging","basePreviewUrl","typeResolvers","TypeResolver","getAllArticles","items","type","toPromise","then","response","catch","reason","getProductsPage","defaultAppContext","dataLoadingStatus","NotLoaded","previewApiKeyLoadingStatus","projectIdLoadingStatus","pages","products","loadWelcomePage","loadProducts","setProjectId","setLoadingStatus","setProjectIdLoadingStatus","setPreviewApiKey","setPreviewApiKeyLoadingStatus","AppContextProvider","AppContextConsumer","AppContext","_React$PureComponent","loadingStatus","asyncToGenerator","regenerator_default","mark","_callee","articles","wrap","_context","prev","next","sent","stop","_callee2","productsPage","_context2","createClass","key","_this$state","contextValue","PureComponent","NavigationBar","appContext","authContext","className","react_router_dom","onClick","PageContent","Fragment","ProductDetailsPage","init","product","PageContent_PageContent","alt","src","pictureUrl","dangerouslySetInnerHTML","__html","ProductDetailsPageConnected","match","ProductDetailsPage_ProductDetailsPage","filter","system","codename","productId","ProductCard","ProductsPage","_this$props","map","ProductCard_ProductCard","assets","id","ProductsPageConnected","ProductsPage_ProductsPage","WelcomePage","page","getHtml","WelcomePageConnected","WelcomePage_WelcomePage","App","component","exact","Boolean","hostname","MissingProjectIdErrorPageContent","href","UnableToGetPreviewApiKeyErrorPageContent","ErrorPage","MissingProjectId","ErrorPage_MissingProjectIdErrorPageContent","UnableToGetPreviewApiKey","ErrorPage_UnableToGetPreviewApiKeyErrorPageContent","addCustomHeaders","request","customHeaders","keys","forEach","header","setRequestHeader","getNewEmptyRequest","XMLHttpRequest","parseResponse","responseText","JSON","parse","restProvider","ajax","makeRequest","httpVerb","data","requestContext","headers","defaultHeaders","newHeaders","authToken","Authorization","appInstanceId","getHeaders","Content-type","requestBody","stringify","prepareDataForSend","post","validStatusCodes","indexOf","status","createRestProvider","withCredentials","Promise","resolve","open","onreadystatechange","readyState","send","requestFile","upload","formData","uploadProgressCallback","addEventListener","createAjaxWithCredentials","getPreviewApiKey","getProjectIdFromUrl","matchPath","createLoadPreviewApiKey","api_key","AppContextInitialization","prevProps","loadApplicationData","_this$props$appContex","Failed","ErrorPage_ErrorPage","Finished","AppContextInitializationWithRouter","deps","fetchData","loadPreviewApikey","projectIdFromUrl","InProgress","AppContextInitialization_AppContextInitialization","assign","ReactDOM","basename","AppContext_AppContext","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a2f119c.chunk.js","sourcesContent":["export const uuidPattern = '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}';\r\n\r\nexport const RootRoute = '/';\r\nexport const CallbackRoute = `${RootRoute}callback`;\r\nexport const LogoutRoute = `${RootRoute}logout`;\r\n\r\nexport const ProjectRoute = `${RootRoute}:projectId(${uuidPattern})`;\r\nexport const ProductsRoute = `${ProjectRoute}/products`;\r\nexport const ProductDetailsRoute = `${ProductsRoute}/:productId`;\r\n\r\nexport const ErrorRoute = `${RootRoute}error`;\r\n\r\nexport type ProjectRouteParams = {\r\n  readonly projectId: string;\r\n};\r\n\r\nexport type ProductDetailsRouteParams = ProjectRouteParams & {\r\n  readonly productId: string;\r\n}\r\n","import {\n  AuthOptions,\n  LogoutOptions,\n} from 'auth0-js';\n\nexport const authOptions: AuthOptions = {\n  domain: process.env.REACT_APP_AUTH_DOMAIN!,\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID!,\n  audience: 'https://app.kenticocloud.com/',\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT_URL,\n  responseType: 'token id_token',\n  scope: 'openid',\n};\n\nexport const logoutOptions: LogoutOptions = {\n  returnTo: process.env.REACT_APP_AUTH_LOGOUT_RETURN_TO,\n};\n","import auth0 from 'auth0-js';\r\nimport {\r\n  authOptions,\r\n  logoutOptions,\r\n} from './authOptions';\r\nimport {Auth0RedirectUriStorageKey} from \"../constants/localStorageKeys\";\r\nimport {RootRoute} from \"../constants/routePaths\";\r\n\r\nexport interface IAccessToken {\r\n  readonly accessToken: string;\r\n  readonly expiresAt: number;\r\n}\r\n\r\nexport interface IWebAuth {\r\n  readonly login: () => void;\r\n  readonly logout: () => void;\r\n  readonly silentLogin: () => void;\r\n  readonly handleAuthentication: (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void) => void;\r\n  readonly isAuthenticated: (expiresIn: number) => boolean;\r\n}\r\n\r\nexport class WebAuth implements IWebAuth {\r\n  private webAuth = new auth0.WebAuth(authOptions);\r\n\r\n  login = (): void => {\r\n    this.webAuth.authorize();\r\n  };\r\n\r\n  silentLogin = (): void => {\r\n    localStorage.setItem(Auth0RedirectUriStorageKey, window.location.pathname);\r\n    this.webAuth.authorize({\r\n      prompt: 'none',\r\n    });\r\n  };\r\n\r\n  logout = (): void => {\r\n    this.webAuth.logout(logoutOptions);\r\n  };\r\n\r\n  handleAuthentication = (onSuccessLogin: (accessToken: IAccessToken, redirectUri: string) => void, onFailedLogin: () => void): void => {\r\n    this.webAuth.parseHash((err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        const accessToken: IAccessToken = {\r\n          accessToken: authResult.accessToken as string,\r\n          expiresAt: ((authResult.expiresIn || 0) * 1000) + new Date().getTime(),\r\n        };\r\n\r\n        const redirectUriFromStorage = localStorage.getItem(Auth0RedirectUriStorageKey);\r\n        localStorage.removeItem(Auth0RedirectUriStorageKey);\r\n        const redirectUri = redirectUriFromStorage ? redirectUriFromStorage : RootRoute;\r\n\r\n        onSuccessLogin(accessToken, redirectUri);\r\n      }\r\n      else if (err) {\r\n        onFailedLogin();\r\n        this.login();\r\n      }\r\n    });\r\n  };\r\n\r\n  isAuthenticated = (expiresAt: number): boolean => {\r\n    // Check whether the current time is past the access token's expiry time\r\n    return new Date().getTime() < expiresAt;\r\n  };\r\n}\r\n","export const Auth0RedirectUriStorageKey = 'redirectUri';\r\n","import React from 'react';\r\n\r\nexport const Callback = (): JSX.Element => {\r\n    return (\r\n      <div>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n};\r\n","import React from 'react';\nimport {IAccessToken, WebAuth} from \"../authentication/WebAuth\";\nimport {Redirect, Route, RouteComponentProps, Switch, withRouter} from \"react-router\";\nimport {Callback} from \"../components/Callback\";\nimport {CallbackRoute, RootRoute} from \"../constants/routePaths\";\n\ninterface IAuthContextState {\n  readonly accessToken: string;\n  readonly expiresAt: number;\n  readonly isLoggedIn: boolean;\n}\n\nexport interface IAuthContext extends IAuthContextState {\n  readonly logout: () => void;\n}\n\nconst defaultAuthContext: IAuthContext = {\n  accessToken: '',\n  expiresAt: 0,\n  isLoggedIn: false,\n  logout: () => undefined,\n};\n\nconst context = React.createContext<IAuthContext>(defaultAuthContext);\nconst AuthContextProvider = context.Provider;\n\nexport const AuthContextConsumer = context.Consumer;\n\nclass AuthContext extends React.Component<RouteComponentProps, IAuthContextState> {\n\n  private webAuth = new WebAuth();\n\n  constructor(props: RouteComponentProps) {\n    super(props);\n\n    this.state = {\n      accessToken: '',\n      isLoggedIn: false,\n      expiresAt: 0,\n    };\n  }\n\n  private isAuthUrlHash = (hash: string): boolean => /access_token|id_token|error/.test(hash);\n\n  handleAuthCallback = ({ location }: any) => {\n    if (this.isAuthUrlHash(location.hash)) {\n      this.webAuth.handleAuthentication(this.onSuccessLogin, this.onFailedLogin);\n    }\n  };\n\n  onSuccessLogin = (accessToken: IAccessToken, redirectUri: string) => {\n    this.setState({\n      accessToken: accessToken.accessToken,\n      expiresAt: accessToken.expiresAt,\n      isLoggedIn: true,\n    });\n    console.log('history push, ', redirectUri);\n    this.props.history.push(redirectUri);\n  };\n\n  onFailedLogin = () => {\n    console.warn('on failed login');\n  };\n\n  componentDidMount() {\n    const {silentLogin} = this.webAuth;\n    if (!this.isAuthUrlHash(window.location.hash)) {\n      silentLogin();\n    }\n  }\n\n  render() {\n    const context: IAuthContext = {\n      ...this.state,\n      logout: this.webAuth.logout,\n    };\n\n    const { isLoggedIn } = this.state;\n\n    /* TODO: If silent login is processing, could also be shown \"InProgress...\" to avoid blinking the browser screen */\n\n    return (\n      <Switch>\n        {isLoggedIn ?\n          <Redirect\n            from={CallbackRoute}\n            to={RootRoute}\n          /> :\n          <Route\n            path={CallbackRoute}\n            render={props => {\n              this.handleAuthCallback(props);\n              return <Callback />;\n            }}\n          />\n        }\n\n        {isLoggedIn && (\n          <Route render={() => (\n            <AuthContextProvider value={context}>\n              {this.props.children}\n            </AuthContextProvider>\n          )}/>\n        )}\n      </Switch>\n    )\n  }\n}\n\nconst AuthContextWithRouter = withRouter(AuthContext);\nexport { AuthContextWithRouter as AuthContext };\n","import {compile} from \"path-to-regexp\";\r\n\r\ninterface IDictionary<T> {\r\n  readonly [key: string]: T | undefined;\r\n}\r\n\r\nexport function buildPath<TRouteParams = IDictionary<string>>(route: string, params: TRouteParams): string {\r\n  return compile(route)(params as any as object);\r\n}\r\n","export enum LoadingStatus {\r\n  NotLoaded = 'notLoaded',\r\n  InProgress = 'inProgress',\r\n  Finished = 'finished',\r\n  Failed = 'failed',\r\n}\r\n","import React from 'react';\r\nimport {RootRoute} from \"../constants/routePaths\";\r\n\r\nexport enum ErrorPageType {\r\n  MissingProjectId = 'missingProjectId',\r\n  UnableToGetPreviewApiKey = 'unableToGetPreviewApiKey',\r\n}\r\n\r\ninterface IErrorPageProps {\r\n  readonly type: ErrorPageType;\r\n}\r\n\r\nconst MissingProjectIdErrorPageContent: React.FunctionComponent = () => (\r\n  <>\r\n    <p>Didn't you forget to provide Project Id in url? E.g. <i>https://kentico.github.io/cloud-preview-sample-app/your_project_id</i></p>\r\n    <p>Default: <a href={`${RootRoute}cf6c9bb2-6d7e-00f8-a84a-b8042d1209c6`}>cf6c9bb2-6d7e-00f8-a84a-b8042d1209c6</a></p>\r\n  </>\r\n);\r\n\r\nconst UnableToGetPreviewApiKeyErrorPageContent: React.FunctionComponent = () => (\r\n  <>\r\n    <p>There was problem retrieving Preview Api Key.</p>\r\n    <p>Did you provide correct Project Id? E.g. <a href={`${RootRoute}cf6c9bb2-6d7e-00f8-a84a-b8042d1209c6`}>cf6c9bb2-6d7e-00f8-a84a-b8042d1209c6</a></p>\r\n  </>\r\n);\r\n\r\nexport const ErrorPage: React.FunctionComponent<IErrorPageProps> = ({ type }) => (\r\n  <>\r\n    <p>Ooops, there was some error!</p>\r\n    {type === ErrorPageType.MissingProjectId && (\r\n      <MissingProjectIdErrorPageContent/>\r\n    )}\r\n\r\n    {type === ErrorPageType.UnableToGetPreviewApiKey && (\r\n      <UnableToGetPreviewApiKeyErrorPageContent/>\r\n    )}\r\n  </>\r\n);\r\n\r\n","\r\nimport { ContentItem, Fields } from 'kentico-cloud-delivery';\r\n\r\n/**\r\n * This class was generated by 'kentico-cloud-model-generator-utility' at Thu Jun 06 2019 14:16:39 GMT+0200 (GMT+02:00).\r\n *\r\n * Note: You can substitute 'ContentItem' type with another generated class. Generator doesn't have this information available\r\n * and so its up to you to define relationship between models.\r\n */\r\nexport class ArticleExampleContentType extends ContentItem {\r\n    public body!: Fields.RichTextField;\r\n    public title!: Fields.TextField;\r\n    public url!: Fields.UrlSlugField;\r\n}\r\n","\r\nimport { ContentItem, Fields } from 'kentico-cloud-delivery';\r\nimport {ProductExampleContentType} from \"./Product\";\r\n\r\n/**\r\n * This class was generated by 'kentico-cloud-model-generator-utility' at Thu Jun 06 2019 14:16:39 GMT+0200 (GMT+02:00).\r\n *\r\n * Note: You can substitute 'ContentItem' type with another generated class. Generator doesn't have this information available\r\n * and so its up to you to define relationship between models.\r\n */\r\nexport class LandingPageExampleContentType extends ContentItem {\r\n    public productList!: ProductExampleContentType[];\r\n    public title!: Fields.TextField;\r\n    public url!: Fields.UrlSlugField;\r\n    constructor() {\r\n        super({\r\n            propertyResolver: ((fieldName: string) => {\r\n                if (fieldName === 'product_list') {\r\n                    return 'productList';\r\n                }\r\n                return fieldName;\r\n            })\r\n        });\r\n    }\r\n}\r\n","\r\nimport { ContentItem, Fields } from 'kentico-cloud-delivery';\r\n\r\n/**\r\n * This class was generated by 'kentico-cloud-model-generator-utility' at Thu Jun 06 2019 14:16:39 GMT+0200 (GMT+02:00).\r\n *\r\n * Note: You can substitute 'ContentItem' type with another generated class. Generator doesn't have this information available\r\n * and so its up to you to define relationship between models.\r\n */\r\nexport class ProductExampleContentType extends ContentItem {\r\n    public description!: Fields.RichTextField;\r\n    public name!: Fields.TextField;\r\n    public image!: Fields.AssetsField;\r\n    public taxonomyCategorizingTargetAudience!: Fields.TaxonomyField;\r\n    constructor() {\r\n        super({\r\n            propertyResolver: ((fieldName: string) => {\r\n                if (fieldName === 'taxonomy___categorizing_target_audience') {\r\n                    return 'taxonomyCategorizingTargetAudience';\r\n                }\r\n                return fieldName;\r\n            })\r\n        });\r\n    }\r\n}\r\n","import {ArticleExampleContentType} from \"../models/Article\";\r\nimport {DeliveryClient, IDeliveryClient, TypeResolver} from \"kentico-cloud-delivery\";\r\nimport {LandingPageExampleContentType} from \"../models/LandingPage\";\r\nimport {first} from \"rxjs/operators\";\r\nimport {ProductExampleContentType} from \"../models/Product\";\r\n\r\nlet deliveryClient: IDeliveryClient | null = null;\r\n\r\nconst ensureDeliveryClient = (projectId: string, previewApiKey: string): void => {\r\n  if (deliveryClient) {\r\n    return;\r\n  }\r\n\r\n  deliveryClient = new DeliveryClient({\r\n    enablePreviewMode: true,\r\n    enableAdvancedLogging: true,\r\n    previewApiKey,\r\n    projectId: projectId,\r\n    basePreviewUrl: 'https://qa-preview-deliver.global.ssl.fastly.net',\r\n    typeResolvers: [\r\n      new TypeResolver('article_example_content_type', () => new ArticleExampleContentType()),\r\n      new TypeResolver('landing_page_example_content_type', () => new LandingPageExampleContentType()),\r\n      new TypeResolver('product_example_content_type', () => new ProductExampleContentType()),\r\n    ],\r\n  });\r\n};\r\n\r\n\r\nexport const getAllArticles = (projectId: string, previewApiKey: string): Promise<Array<ArticleExampleContentType>> => {\r\n  ensureDeliveryClient(projectId, previewApiKey);\r\n  if (!deliveryClient) {\r\n    throw 'Delivery client is not initialized yet';\r\n  }\r\n\r\n  return deliveryClient.items<ArticleExampleContentType>()\r\n    .type('article_example_content_type')\r\n    .toPromise()\r\n    .then(response => {\r\n      console.log('got response!', response);\r\n      return response.items;\r\n    })\r\n    .catch(reason => {\r\n      console.log(reason);\r\n      return new Array<ArticleExampleContentType>();\r\n    });\r\n};\r\n\r\nexport const getProductsPage = (projectId: string, previewApiKey: string): Promise<Array<LandingPageExampleContentType>> => {\r\n  ensureDeliveryClient(projectId, previewApiKey);\r\n  if (!deliveryClient) {\r\n    throw 'Delivery client is not initialized yet';\r\n  }\r\n\r\n  return deliveryClient.items<LandingPageExampleContentType>()\r\n    .type('landing_page_example_content_type')\r\n    .toPromise()\r\n    .then(response => {\r\n      console.log('got response!', response);\r\n      return response.items;\r\n    })\r\n    .catch(reason => {\r\n      console.log(reason);\r\n      return new Array<LandingPageExampleContentType>();\r\n    });\r\n};\r\n","import React from 'react';\r\nimport {LoadingStatus} from \"../enums/LoadingStatus\";\r\nimport {getAllArticles, getProductsPage} from \"../repositories/contentItemRepository\";\r\nimport {ArticleExampleContentType} from \"../models/Article\";\r\nimport {ProductExampleContentType} from \"../models/Product\";\r\n\r\ninterface IAppContextState {\r\n  readonly dataLoadingStatus: LoadingStatus;\r\n  readonly previewApiKey: string;\r\n  readonly previewApiKeyLoadingStatus: LoadingStatus;\r\n  readonly projectId: string;\r\n  readonly projectIdLoadingStatus: LoadingStatus;\r\n  readonly pages: Array<ArticleExampleContentType>;\r\n  readonly products: Array<ProductExampleContentType>;\r\n}\r\n\r\ninterface IAppContextProps {\r\n  readonly loadWelcomePage: () => void;\r\n  readonly loadProducts: () => void;\r\n\r\n  readonly setProjectId: (projectId: string) => void;\r\n  readonly setLoadingStatus: (loadingStatus: LoadingStatus) => void;\r\n  readonly setProjectIdLoadingStatus: (projectIdLoadingStatus: LoadingStatus) => void;\r\n  readonly setPreviewApiKey: (previewApiKey: string) => void;\r\n  readonly setPreviewApiKeyLoadingStatus: (previewApiKeyLoadingStatus: LoadingStatus) => void;\r\n}\r\n\r\nexport interface IAppContext extends IAppContextState, IAppContextProps {\r\n}\r\n\r\nexport interface IProduct {\r\n  readonly productId: string;\r\n  readonly title: string;\r\n  readonly pictureUrl: string;\r\n  readonly description: string;\r\n}\r\n\r\nexport interface IPage {\r\n  readonly codename: string;\r\n  readonly title: string;\r\n  readonly content: string;\r\n}\r\n\r\nconst defaultAppContext: IAppContext = {\r\n  dataLoadingStatus: LoadingStatus.NotLoaded,\r\n  previewApiKey: '',\r\n  previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\r\n  projectId: '',\r\n  projectIdLoadingStatus: LoadingStatus.NotLoaded,\r\n  pages: new Array<ArticleExampleContentType>(),\r\n  products: new Array<ProductExampleContentType>(),\r\n  loadWelcomePage: () => undefined,\r\n  loadProducts: () => undefined,\r\n  setProjectId: () => undefined,\r\n  setLoadingStatus: () => undefined,\r\n  setProjectIdLoadingStatus: () => undefined,\r\n  setPreviewApiKey: () => undefined,\r\n  setPreviewApiKeyLoadingStatus: () => undefined,\r\n};\r\n\r\nconst context = React.createContext<IAppContext>(defaultAppContext);\r\nconst AppContextProvider = context.Provider;\r\n\r\nexport const AppContextConsumer = context.Consumer;\r\n\r\nexport class AppContext extends React.PureComponent<{}, IAppContextState> {\r\n\r\n  readonly state = {\r\n    dataLoadingStatus: LoadingStatus.NotLoaded,\r\n    previewApiKey: '',\r\n    previewApiKeyLoadingStatus: LoadingStatus.NotLoaded,\r\n    projectId: '',\r\n    projectIdLoadingStatus: LoadingStatus.NotLoaded,\r\n    pages: new Array<ArticleExampleContentType>(),\r\n    products: new Array<ProductExampleContentType>(),\r\n  };\r\n\r\n  setProjectId = (projectId: string) => {\r\n    this.setState({ projectId });\r\n  };\r\n\r\n  setLoadingStatus = (loadingStatus: LoadingStatus) => {\r\n    this.setState({ dataLoadingStatus: loadingStatus })\r\n  };\r\n\r\n  setProjectIdLoadingStatus = (projectIdLoadingStatus: LoadingStatus) => {\r\n    this.setState({ projectIdLoadingStatus });\r\n  };\r\n\r\n  setPreviewApiKey = (previewApiKey: string) => {\r\n    this.setState({ previewApiKey });\r\n  };\r\n\r\n  setPreviewApiKeyLoadingStatus = (previewApiKeyLoadingStatus: LoadingStatus) => {\r\n    this.setState({ previewApiKeyLoadingStatus });\r\n  };\r\n\r\n  loadWelcomePage = async () => {\r\n    const articles = await getAllArticles(this.state.projectId, this.state.previewApiKey);\r\n    this.setState({ pages: articles });\r\n  };\r\n\r\n  loadProducts = async () => {\r\n    const productsPage = await getProductsPage(this.state.projectId, this.state.previewApiKey);\r\n    console.log(productsPage[0].productList);\r\n    if (productsPage && productsPage[0]) {\r\n      this.setState({ products: productsPage[0].productList });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { products, pages, projectId, dataLoadingStatus, projectIdLoadingStatus, previewApiKey, previewApiKeyLoadingStatus } = this.state;\r\n    const contextValue: IAppContext = {\r\n      dataLoadingStatus,\r\n      previewApiKey,\r\n      previewApiKeyLoadingStatus,\r\n      projectId,\r\n      projectIdLoadingStatus,\r\n      pages,\r\n      products,\r\n      loadWelcomePage: this.loadWelcomePage,\r\n      loadProducts: this.loadProducts,\r\n      setProjectId: this.setProjectId,\r\n      setLoadingStatus: this.setLoadingStatus,\r\n      setProjectIdLoadingStatus: this.setProjectIdLoadingStatus,\r\n      setPreviewApiKey: this.setPreviewApiKey,\r\n      setPreviewApiKeyLoadingStatus: this.setPreviewApiKeyLoadingStatus,\r\n    };\r\n\r\n    return (\r\n      <AppContextProvider value={contextValue}>\r\n        {this.props.children}\r\n      </AppContextProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavigationBar.css';\r\nimport {\r\n  ProductsRoute,\r\n  ProjectRoute,\r\n  ProjectRouteParams,\r\n} from '../constants/routePaths';\r\nimport {AuthContextConsumer} from \"../context/AuthContext\";\r\nimport {buildPath} from \"../utils/routeTransitionUtils\";\r\nimport {AppContextConsumer} from \"../context/AppContext\";\r\n\r\nexport class NavigationBar extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <AppContextConsumer>\r\n        {appContext => (\r\n          <AuthContextConsumer>\r\n            {authContext => (\r\n              <div className=\"navigation-bar\">\r\n                <nav className=\"navigation-bar__app-menu\">\r\n                  <Link className=\"navigation-bar__app-menu-button\" to={buildPath<ProjectRouteParams>(ProjectRoute, { projectId: appContext.projectId })}>Welcome</Link>\r\n                  <Link className=\"navigation-bar__app-menu-button\" to={buildPath<ProjectRouteParams>(ProductsRoute, { projectId: appContext.projectId })}>Products</Link>\r\n                </nav>\r\n                <div className=\"navigation-bar__user-menu\">\r\n                  <button className=\"navigation-bar__user-menu-button\" onClick={authContext.logout}>Logout</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </AuthContextConsumer>\r\n        )}\r\n      </AppContextConsumer>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport interface IPageContentProps {\r\n  readonly title: string;\r\n}\r\n\r\nexport const PageContent: React.FunctionComponent<IPageContentProps> = ({ title, children }) => (\r\n  <>\r\n    <div className=\"app-title\">\r\n      {title}\r\n    </div>\r\n    <div className=\"app-content\">\r\n      {children}\r\n    </div>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport {\r\n  AppContextConsumer,\r\n} from '../../context/AppContext';\r\nimport './ProductDetailsPage.css';\r\nimport {ProductDetailsRouteParams} from \"../../constants/routePaths\";\r\nimport {ProductExampleContentType} from \"../../models/Product\";\r\nimport {PageContent} from \"../PageContent\";\r\n\r\ninterface IProductDetailsPage {\r\n  readonly product: ProductExampleContentType;\r\n  readonly init: () => void;\r\n}\r\n\r\nclass ProductDetailsPage extends React.PureComponent<IProductDetailsPage> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    if (product) {\r\n      return (\r\n        <PageContent title={product.name.value}>\r\n          <img\r\n            className=\"product-image\"\r\n            alt={product.title}\r\n            src={product.pictureUrl}\r\n          />\r\n          {/* TODO: Check if using dangerouslySetInnerHTML is the best practice to shown html content received from Deliver */}\r\n          <div dangerouslySetInnerHTML={{ __html: product.description.value }} />\r\n        </PageContent>);\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\ninterface IProductDetailsPageConnectedProps {\r\n  readonly match: {\r\n    readonly params: ProductDetailsRouteParams;\r\n  };\r\n}\r\n\r\nconst ProductDetailsPageConnected: React.FunctionComponent<IProductDetailsPageConnectedProps> = ({ match }) => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <ProductDetailsPage\r\n        product={appContext.products.filter(product => product.system.codename === match.params.productId)[0]}\r\n        init={appContext.loadProducts}\r\n      />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { ProductDetailsPageConnected as ProductDetailsPage }\r\n","import {Link} from \"react-router-dom\";\r\nimport {buildPath} from \"../../utils/routeTransitionUtils\";\r\nimport {ProductDetailsRoute, ProductDetailsRouteParams} from \"../../constants/routePaths\";\r\nimport React from \"react\";\r\nimport './ProductCard.css';\r\n\r\ninterface IProductCardProps {\r\n  readonly projectId: string;\r\n  readonly productId: string;\r\n  readonly title: string;\r\n  readonly pictureUrl: string;\r\n}\r\n\r\nexport const ProductCard: React.FunctionComponent<IProductCardProps> =\r\n  ({ projectId, productId, pictureUrl, title }) => {\r\n    return (\r\n      <div className=\"product-card\">\r\n        <Link to={buildPath<ProductDetailsRouteParams>(ProductDetailsRoute, { projectId, productId })}>\r\n          <img\r\n            className=\"product-card__thumbnail\"\r\n            src={pictureUrl}\r\n            alt=\"product thumbnail\"\r\n          />\r\n          {title}\r\n        </Link>\r\n      </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  AppContextConsumer,\r\n} from '../../context/AppContext';\r\nimport { PageContent } from '../PageContent';\r\nimport './ProductsPage.css';\r\nimport {ProductExampleContentType} from \"../../models/Product\";\r\nimport {ProductCard} from \"./ProductCard\";\r\n\r\ninterface IProductsPageProps {\r\n  readonly init: () => void;\r\n  readonly projectId: string;\r\n  readonly products: Array<ProductExampleContentType>;\r\n}\r\n\r\nclass ProductsPage extends React.PureComponent<IProductsPageProps> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const { projectId, products } = this.props;\r\n    return (\r\n      <PageContent title=\"Products\">\r\n        <div className=\"product-list\">\r\n          {products.map((product: ProductExampleContentType) => (\r\n            <ProductCard\r\n              title={product.name.value}\r\n              pictureUrl={product.image.assets[0].url}\r\n              productId={product.system.codename}\r\n              projectId={projectId}\r\n              key={product.system.id}\r\n            />)\r\n          )}\r\n        </div>\r\n      </PageContent>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductsPageConnected = () => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <ProductsPage\r\n        init={appContext.loadProducts}\r\n        projectId={appContext.projectId}\r\n        products={appContext.products}\r\n      />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { ProductsPageConnected as ProductsPage };\r\n","import React from 'react';\r\nimport {\r\n  AppContextConsumer\r\n} from '../context/AppContext';\r\nimport { PageContent } from './PageContent';\r\nimport {ArticleExampleContentType} from \"../models/Article\";\r\n\r\ninterface IWelcomePageProps {\r\n  readonly pages: Array<ArticleExampleContentType>;\r\n  readonly init: () => void;\r\n}\r\n\r\nclass WelcomePage extends React.PureComponent<IWelcomePageProps> {\r\n  componentDidMount(): void {\r\n    this.props.init();\r\n  }\r\n\r\n  render() {\r\n    const page = this.props.pages[0];\r\n    if (page) {\r\n      return (\r\n        <PageContent title={page.title.value}>\r\n          <div dangerouslySetInnerHTML={{ __html: page.body.getHtml() }} />\r\n        </PageContent>\r\n      );\r\n    }\r\n\r\n    return <p>Missing data for Welcome page</p>;\r\n  }\r\n}\r\n\r\nconst WelcomePageConnected = () => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <WelcomePage\r\n        pages={appContext.pages}\r\n        init={appContext.loadWelcomePage} />\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nexport { WelcomePageConnected as WelcomePage }\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport { NavigationBar } from './components/NavigationBar';\r\nimport { ProductDetailsPage } from './components/Product/ProductDetailsPage';\r\nimport {\r\n  ProductsPage,\r\n} from './components/Product/ProductsPage';\r\nimport {\r\n  ProductDetailsRoute,\r\n  ProductsRoute,\r\n  ProjectRoute,\r\n} from './constants/routePaths';\r\nimport {WelcomePage} from \"./components/WelcomePage\";\r\n\r\nexport class App extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Route\r\n          path={ProjectRoute}\r\n          component={NavigationBar}\r\n        />\r\n        <div className=\"app-content-wrapper\">\r\n          <Switch>\r\n            <Route\r\n              path={ProjectRoute}\r\n              exact\r\n              component={WelcomePage}\r\n            />\r\n            <Route\r\n              path={ProductDetailsRoute}\r\n              component={ProductDetailsPage}\r\n            />\r\n            <Route\r\n              path={ProductsRoute}\r\n              component={ProductsPage}\r\n            />\r\n            <Route\r\n              render={() => (\r\n                <p>Ooops, missing page!</p>\r\n              )}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export type CustomHeaders = {\r\n  [key: string]: string,\r\n};\r\n\r\nexport type RequestType =\r\n  'GET'\r\n  | 'POST'\r\n  | 'PUT'\r\n  | 'DELETE'\r\n  | 'PATCH';\r\n\r\nexport type ProgressCallback = (event: {\r\n  loaded: number;\r\n  total: number;\r\n}) => void;\r\n\r\nexport interface ICreateAjax {\r\n  request: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n  requestFile: (type: RequestType, url: string, data: any, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n  upload: (url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders) => Promise<XMLHttpRequest>;\r\n}\r\n\r\nfunction createAjax(withCredentials: any): ICreateAjax {\r\n  return {\r\n    /**\r\n     * Attempts to parse the response as JSON otherwise returns it untouched.\r\n     *\r\n     * @param {string} type The HTTP verb to be used.\r\n     * @param {string} url The url for the XHR request.\r\n     * @param {object} data Optional. The data to be passed with a POST or PUT request.\r\n     * @param {object} customHeaders Optional. Custom headers to be included in a request.\r\n     *\r\n     * @memberof ajax\r\n     */\r\n    request(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise<XMLHttpRequest>(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open(type, url, true);\r\n        request.withCredentials = withCredentials;\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.send(data);\r\n      });\r\n    },\r\n\r\n    requestFile(type: RequestType, url: string, data: any, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise<XMLHttpRequest>(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open(type, url, true);\r\n        request.responseType = 'blob';\r\n        request.withCredentials = withCredentials;\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.send(data);\r\n      });\r\n    },\r\n\r\n    upload(url: string, formData: FormData, uploadProgressCallback: ProgressCallback, customHeaders?: CustomHeaders): Promise<XMLHttpRequest> {\r\n      return new Promise(resolve => {\r\n        const request = getNewEmptyRequest();\r\n\r\n        request.open('POST', url, true);\r\n\r\n        addCustomHeaders(request, customHeaders);\r\n\r\n        request.onreadystatechange = () => {\r\n          if (request.readyState === 4) {\r\n            resolve(request);\r\n          }\r\n        };\r\n\r\n        request.upload.addEventListener('progress', uploadProgressCallback);\r\n        request.send(formData);\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\nfunction addCustomHeaders(request: XMLHttpRequest, customHeaders?: CustomHeaders) {\r\n  if (customHeaders) {\r\n    Object.keys(customHeaders).forEach((header) => {\r\n      const value = customHeaders[header];\r\n      if (header && value) {\r\n        request.setRequestHeader(header, value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction getNewEmptyRequest(): XMLHttpRequest {\r\n  // if (XMLHttpRequest) {\r\n  return new XMLHttpRequest();\r\n  // }\r\n  // else {\r\n  //   // Set ajax to correct XHR type. Source: https://gist.github.com/jed/993585\r\n  //   return new XMLHttpRequest();\r\n  //   //return new ActiveXObject('MSXML2.XMLHTTP.3.0');\r\n  // }\r\n}\r\n\r\nexport function createAjaxWithCredentials(): ICreateAjax {\r\n  return createAjax(true);\r\n}\r\n\r\n// export function createAjaxWithoutCredentials(): ICreateAjax {\r\n//   return createAjax(false);\r\n// }\r\n","import { RequestType } from './ajax';\r\n\r\nexport interface IRequestContext {\r\n  readonly appInstanceId?: string;\r\n  readonly authToken?: string;\r\n}\r\n\r\nexport type CustomHeaders = {\r\n  [key: string]: string,\r\n};\r\n\r\n\r\nfunction getAuthHeader(accessToken: string): CustomHeaders {\r\n  return { Authorization: `Bearer ${accessToken}` };\r\n}\r\n\r\nfunction getHeaders(defaultHeaders: CustomHeaders, requestContext?: IRequestContext): CustomHeaders {\r\n  if (!requestContext) {\r\n    return defaultHeaders;\r\n  }\r\n\r\n  const newHeaders = requestContext.authToken ? getAuthHeader(requestContext.authToken) : {};\r\n\r\n  if (requestContext.appInstanceId) {\r\n    newHeaders['X-AppInstanceId'] = requestContext.appInstanceId;\r\n  }\r\n\r\n  return { ...defaultHeaders, ...newHeaders };\r\n}\r\n\r\nexport function createRestProvider(ajax: any) {\r\n  function makeRequest(httpVerb: RequestType, url: string, data: any, requestContext?: IRequestContext): Promise<XMLHttpRequest> {\r\n    const headers = getHeaders(\r\n      { 'Content-type': 'application/json' },\r\n      requestContext,\r\n    );\r\n\r\n    const requestBody = data ? prepareDataForSend(data) : null;\r\n    return ajax.request(httpVerb, url, requestBody, headers);\r\n  }\r\n\r\n  // function makeFileRequest(httpVerb: RequestType, url: string, data: any, requestContext?: IRequestContext): Promise<XMLHttpRequest> {\r\n  //   const headers = getHeaders(\r\n  //     { 'Content-type': 'application/octet-stream' },\r\n  //     requestContext,\r\n  //   );\r\n  //\r\n  //   const requestBody = data ? prepareDataForSend(data) : null;\r\n  //   return ajax.requestFile(httpVerb, url, requestBody, headers);\r\n  // }\r\n\r\n  return {\r\n    // get(url: string, queryParameters: QueryStringParams | null, requestContext?: IRequestContext): Promise<any> {\r\n    //   const urlWithQueryParams = url + (queryParameters ? buildUrlQueryString(queryParameters) : '');\r\n    //\r\n    //   return makeRequest('GET', urlWithQueryParams, null, requestContext)\r\n    //     .then(verifyStatusCode([200]))\r\n    //     .then(parseResponse);\r\n    // },\r\n    //\r\n    // getFile(url: string, queryParameters: QueryStringParams | null, requestContext?: IRequestContext): Promise<any> {\r\n    //   const urlWithQueryParams = url + (queryParameters ? buildUrlQueryString(queryParameters) : '');\r\n    //\r\n    //   return makeFileRequest('GET', urlWithQueryParams, null, requestContext)\r\n    //     .then(response => response.response);\r\n    // },\r\n\r\n    post(url: string, data: any, requestContext?: IRequestContext): Promise<any> {\r\n      return makeRequest('POST', url, data, requestContext)\r\n        .then(verifyStatusCode([200, 201]))\r\n        .then(parseResponse);\r\n    },\r\n\r\n    // put(url: string, data: any, requestContext?: IRequestContext): Promise<any> {\r\n    //   return makeRequest('PUT', url, data, requestContext)\r\n    //     .then(verifyStatusCode([200, 201]))\r\n    //     .then(parseResponse);\r\n    // },\r\n    //\r\n    // patch(url: string, data: any, requestContext?: IRequestContext): Promise<any> {\r\n    //   return makeRequest('PATCH', url, data, requestContext)\r\n    //     .then(verifyStatusCode([200]))\r\n    //     .then(parseResponse);\r\n    // },\r\n    //\r\n    // delete(url: string, requestContext?: IRequestContext): Promise<any> {\r\n    //   return makeRequest('DELETE', url, null, requestContext)\r\n    //     .then(verifyStatusCode([200, 204]))\r\n    //     .then(parseResponse);\r\n    // },\r\n    //\r\n    // upload(url: string, file: any, metadata: any, uploadProgressCallback: ProgressCallback, requestContext?: IRequestContext) {\r\n    //   const headers = getHeaders({}, requestContext);\r\n    //\r\n    //   const formData = new FormData();\r\n    //   formData.append(file.name, file);\r\n    //   formData.append('metadata', JSON.stringify(metadata));\r\n    //\r\n    //   return ajax.upload(url, formData, uploadProgressCallback, headers)\r\n    //     .then(verifyStatusCode([201]))\r\n    //     .then(parseResponse);\r\n    // },\r\n  };\r\n}\r\n\r\nfunction prepareDataForSend(data: any): any {\r\n  if (data && typeof data === 'object') {\r\n    // const dto = toDTO(data);\r\n    // return JSON.stringify(dto);\r\n  }\r\n  else if (typeof data === 'string') {\r\n    return JSON.stringify(data);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nfunction verifyStatusCode(validStatusCodes: number[]) {\r\n  return (response: XMLHttpRequest) => {\r\n    if (validStatusCodes.indexOf(response.status) >= 0) {\r\n      return response;\r\n    }\r\n    else {\r\n      throw response;\r\n    }\r\n  };\r\n}\r\n\r\nfunction parseResponse(response: XMLHttpRequest) {\r\n  // it might be empty string which can't be parsed by JSON.parse\r\n  if (!response.responseText) {\r\n    return null;\r\n  }\r\n  return JSON.parse(response.responseText);\r\n}","import { createAjaxWithCredentials } from '../utils/ajax';\r\nimport {\r\n  createRestProvider,\r\n  IRequestContext,\r\n} from '../utils/restProvider';\r\n\r\nconst restProvider = createRestProvider(createAjaxWithCredentials());\r\n\r\nexport interface IPreviewApiKey {\r\n  readonly api_key: string;\r\n  readonly expiresAt: string;\r\n}\r\n\r\nexport const getPreviewApiKey = (authToken: string, projectId: string): Promise<IPreviewApiKey> => {\r\n  const requestContext: IRequestContext = {\r\n    authToken: authToken,\r\n  };\r\n  const url = `https://qa-draft.global.ssl.fastly.net/api/project-management/${projectId}/keys/preview-delivery-api-primary`;\r\n  return restProvider.post(url, null, requestContext);\r\n};\r\n","import {matchPath} from \"react-router\";\r\nimport {ProjectRoute, ProjectRouteParams} from \"../constants/routePaths\";\r\n\r\nexport const getProjectIdFromUrl = (): string | null => {\r\n  console.log(`get project id from url (${window.location})`);\r\n  if (window.location) {\r\n    const match = matchPath<ProjectRouteParams>(window.location.pathname, ProjectRoute + \"*\");\r\n    if (match) {\r\n      console.log('got projectId from url: ', match.params.projectId);\r\n      return match.params.projectId;\r\n    } else {\r\n      console.log('no projectId in url');\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n","import {getPreviewApiKey, IPreviewApiKey} from \"../repositories/previewApiKeyRepository\";\r\nimport {IAuthContext} from \"../context/AuthContext\";\r\nimport {IAppContext} from \"../context/AppContext\";\r\nimport {LoadingStatus} from \"../enums/LoadingStatus\";\r\nimport {getProjectIdFromUrl} from \"./projectIdUtil\";\r\n\r\ninterface ILoadPreviewApiKeyDeps {\r\n  readonly appContext: IAppContext;\r\n  readonly authContext: IAuthContext;\r\n  readonly getPreviewApiKey: (authToken: string, projectId: string) => Promise<IPreviewApiKey>;\r\n}\r\n\r\nexport const createLoadPreviewApiKey = (props: ILoadPreviewApiKeyDeps): () => Promise<string | null> => {\r\n  const { accessToken } = props.authContext;\r\n  const { projectId } = props.appContext;\r\n  return () => getPreviewApiKey(accessToken, projectId)\r\n    .then((response: IPreviewApiKey) => {\r\n      return response.api_key;\r\n    })\r\n    .catch(() => {\r\n      return null;\r\n    })\r\n};\r\n\r\nexport const createFetchData = () => (): string => {\r\n  console.log('fetch data');\r\n  return \"have some data\";\r\n};\r\n\r\ninterface ILoadApplicationDataDeps {\r\n  readonly appContext: IAppContext;\r\n  readonly authContext: IAuthContext;\r\n  readonly fetchData: () => string;\r\n  readonly loadPreviewApikey: () => Promise<string | null>;\r\n}\r\n\r\nexport const createLoadApplicationData = (deps: ILoadApplicationDataDeps) => async (): Promise<void> => {\r\n  const { appContext, loadPreviewApikey, fetchData } = deps;\r\n  if (appContext.projectIdLoadingStatus === LoadingStatus.NotLoaded) {\r\n    const projectIdFromUrl = getProjectIdFromUrl();\r\n    if (projectIdFromUrl) {\r\n      appContext.setProjectId(projectIdFromUrl);\r\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Finished);\r\n    } else {\r\n      appContext.setProjectIdLoadingStatus(LoadingStatus.Failed);\r\n    }\r\n  }\r\n\r\n  if (appContext.projectIdLoadingStatus === LoadingStatus.Finished && appContext.previewApiKeyLoadingStatus === LoadingStatus.NotLoaded) {\r\n    appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.InProgress);\r\n    const previewApiKey = await loadPreviewApikey();\r\n    if (previewApiKey) {\r\n      appContext.setPreviewApiKey(previewApiKey);\r\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Finished);\r\n    }\r\n    else {\r\n      appContext.setPreviewApiKeyLoadingStatus(LoadingStatus.Failed);\r\n    }\r\n  }\r\n\r\n  if (appContext.previewApiKeyLoadingStatus === LoadingStatus.Finished && appContext.dataLoadingStatus === LoadingStatus.NotLoaded) {\r\n    appContext.setLoadingStatus(LoadingStatus.InProgress);\r\n    const data = fetchData();\r\n    appContext.setLoadingStatus(LoadingStatus.Finished);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {RouteComponentProps, withRouter} from \"react-router\";\r\nimport {AuthContextConsumer, IAuthContext} from \"./AuthContext\";\r\nimport {AppContextConsumer, IAppContext} from \"./AppContext\";\r\nimport {Callback} from \"../components/Callback\";\r\n\r\nimport {ErrorPage, ErrorPageType} from \"../components/ErrorPage\";\r\nimport {createFetchData, createLoadApplicationData, createLoadPreviewApiKey} from \"../utils/previewApiKeyUtils\";\r\nimport {getPreviewApiKey} from \"../repositories/previewApiKeyRepository\";\r\nimport {LoadingStatus} from \"../enums/LoadingStatus\";\r\n\r\ninterface IAppContextInitializationProps extends RouteComponentProps {\r\n  readonly authContext: IAuthContext;\r\n  readonly appContext: IAppContext;\r\n  readonly loadApplicationData: () => void;\r\n}\r\n\r\nclass AppContextInitialization extends React.PureComponent<IAppContextInitializationProps, {}> {\r\n\r\n  componentDidUpdate(prevProps: IAppContextInitializationProps): void {\r\n    // todo solve\r\n    this.props.loadApplicationData();\r\n  }\r\n\r\n  render() {\r\n    const { projectIdLoadingStatus, previewApiKeyLoadingStatus, dataLoadingStatus } = this.props.appContext;\r\n    if (projectIdLoadingStatus === LoadingStatus.Failed) {\r\n      return <ErrorPage type={ErrorPageType.MissingProjectId}/>\r\n    }\r\n\r\n    if (previewApiKeyLoadingStatus === LoadingStatus.Failed) {\r\n      return <ErrorPage type={ErrorPageType.UnableToGetPreviewApiKey}/>\r\n    }\r\n\r\n    if (dataLoadingStatus === LoadingStatus.Finished) {\r\n      return this.props.children;\r\n    }\r\n\r\n    return <Callback/>\r\n  }\r\n}\r\n\r\nconst AppContextInitializationConnected = (props: RouteComponentProps) => (\r\n  <AppContextConsumer>\r\n    {appContext => (\r\n      <AuthContextConsumer>\r\n        {authContext => {\r\n          const loadApplicationData = createLoadApplicationData({\r\n            appContext,\r\n            authContext,\r\n            fetchData: createFetchData(),\r\n            loadPreviewApikey: createLoadPreviewApiKey({\r\n              authContext,\r\n              appContext,\r\n              getPreviewApiKey: getPreviewApiKey,\r\n            })\r\n          });\r\n          return (<AppContextInitialization\r\n            loadApplicationData={loadApplicationData}\r\n            authContext={authContext}\r\n            appContext={appContext}\r\n            {...props}\r\n          />);\r\n        }}\r\n      </AuthContextConsumer>\r\n    )}\r\n  </AppContextConsumer>\r\n);\r\n\r\nconst AppContextInitializationWithRouter = withRouter<RouteComponentProps>(AppContextInitializationConnected);\r\nexport { AppContextInitializationWithRouter as AppContextInitialization };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { AppContext } from \"./context/AppContext\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport {AppContextInitialization} from \"./context/AppContextInitialization\";\n\nReactDOM.render(\n  <Router basename={process.env.REACT_APP_PROJECT_ROUTE}>\n    <AuthContext>\n      <AppContext>\n        <AppContextInitialization>\n          <App/>\n        </AppContextInitialization>\n      </AppContext>\n    </AuthContext>\n  </Router>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}